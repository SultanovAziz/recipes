<?phpnamespace app\controllers;use template\Recipe\RecipeTemplate;class RecipeController extends AppController{    public function showAction()    {        $id = empty($_GET['id']) ? null : $_GET['id'];        if($id)        {                $recipe = \R::findOne('recipe', 'id = ?', [$id]);                if ($recipe){                //Request ingredient Id                $ingredietIdRequest = "SELECT * FROM ingredients_in_recipe";                $recipeIdRequest = "JOIN recipe ON recipe.id = ingredients_in_recipe.recipe_id AND recipe.id = ?";                $ingredietId = \R::getAll("$ingredietIdRequest $recipeIdRequest", [$id]);                //Request get ingrediets                $ingrediets = [];                for ($i = 0; $i < count($ingredietId); $i++) {                    $ingrediets[] = \R::getRow("SELECT * FROM unit INNER JOIN ingredients ON ingredients.unit_id = unit.id AND ingredients.id = ? ",                        [$ingredietId[$i]['ingredients_id']]);                }                $numberOfStep = \R::getAll("SELECT * FROM number_of_step WHERE number_of_step.recipe_id = ? ", [$recipe->id]);                //Sort number step of recipe                usort($numberOfStep, function ($a, $b) {                    return ($a['number_step'] - $b['number_step']);                });                $this->setData(compact('recipe', 'ingrediets', 'numberOfStep','ingredietId'));                }                else{                    throw new \Exception("Рецепта нет в базе данных");                }        }    }    public function deleteAction()    {        $id = empty($_GET['id']) ? null : $_GET['id'];        $categoryId = empty($_GET['categoryId']) ? null : $_GET['categoryId'];        if ($id)        {            $recipes = \R::findOne('recipe','id = ?',[$id]);            \R::trash($recipes);            if ($categoryId){                $recipe = \R::findAll('recipe','category_id = ?',[$categoryId]);            }            else{                $recipe = \R::find('recipe','LIMIT 9');            }            $recipeTemplate = new RecipeTemplate();            $recipeTemplate->getTemplate($recipe);        }    }    public function addAction()    {        $categories = \R::findAll('category');        $ingrediets = \R::getAll('SELECT * FROM unit INNER JOIN ingredients ON ingredients.unit_id = unit.id ');        $this->setData(compact('categories','ingrediets'));    }    public function sendAddAction()    {        if(isset($_FILES['img'])){            $fileTmpName = $_FILES['img']['tmp_name'];            $name = $_FILES['img']['name'];            $destination_path = getcwd().DIRECTORY_SEPARATOR;            $target_path = $destination_path.'/img/recipe/' . basename( $name);            @move_uploaded_file( $fileTmpName, $target_path);        }        redirect();    }}